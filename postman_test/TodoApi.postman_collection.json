{
	"info": {
		"_postman_id": "ca90fd8e-a605-4614-b7fd-c7560fdd0f3e",
		"name": "TodoApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11532624"
	},
	"item": [
		{
			"name": "Post Todo1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code uguale a 201\", () => {",
							"    pm.expect(pm.response.code).to.eql(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": 0,\n  \"name\": \"Giovanni\",\n  \"isComplete\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/Todo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"Todo"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Todo1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code uguale a 200\", () => {",
							"    pm.expect(pm.response.code).to.eql(200);",
							"});",
							"",
							"pm.test(\" is Todo1\", () => {",
							"    //parse the response JSON and test three properties",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.id).to.eql(1);",
							"    pm.expect(responseJson.name).to.eql('Giovanni');",
							"    pm.expect(responseJson.isComplete).to.be.a('boolean');",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(300);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/Todo/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"Todo",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post Todo2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code uguale a 201\", () => {",
							"    pm.expect(pm.response.code).to.eql(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": 0,\n  \"name\": \"Salvator\",\n  \"isComplete\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/Todo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"Todo"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Todo2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code uguale a 200\", () => {",
							"    pm.expect(pm.response.code).to.eql(200);",
							"});",
							"",
							"pm.test(\"is Todo2\", () => {",
							"    //parse the response JSON and test three properties",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.id).to.eql(2);",
							"    pm.expect(responseJson.name).to.eql('Salvator');",
							"    pm.expect(responseJson.isComplete).to.be.a('boolean');",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/Todo/2",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"Todo",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Put Todo2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code uguale a 204\", () => {",
							"    pm.expect(pm.response.code).to.eql(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": 2,\n  \"name\": \"Salvatore\",\n  \"isComplete\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/Todo/2",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"Todo",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Todo2 mod",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code uguale a 200\", () => {",
							"    pm.expect(pm.response.code).to.eql(200);",
							"});",
							"",
							"pm.test(\"is Todo2\", () => {",
							"    //parse the response JSON and test three properties",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.id).to.eql(2);",
							"    pm.expect(responseJson.name).to.eql('Salvatore');",
							"    pm.expect(responseJson.isComplete).to.be.a('boolean');",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/Todo/2",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"Todo",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post Todo3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code uguale a 201\", () => {",
							"    pm.expect(pm.response.code).to.eql(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": 0,\n  \"name\": \"Barbato\",\n  \"isComplete\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/Todo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"Todo"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET TodoList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code uguale a 200\", () => {",
							"    pm.expect(pm.response.code).to.eql(200);",
							"});",
							"",
							"pm.test(\"Todo list have 3 elements\", () => {",
							"    //parse the response JSON and test three properties",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.lengthOf(3);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/Todo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"Todo"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Todo1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/Todo/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"Todo",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Todo2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/Todo/2",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"Todo",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Todo3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/Todo/3",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"Todo",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET TodoList 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code uguale a 200\", () => {",
							"    pm.expect(pm.response.code).to.eql(200);",
							"});",
							"",
							"pm.test(\"Todo list have 3 elements\", () => {",
							"    //parse the response JSON and test three properties",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.have.lengthOf(0);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/Todo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"Todo"
					]
				}
			},
			"response": []
		},
		{
			"name": "isAlive",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code uguale a 200\", () => {",
							"    pm.expect(pm.response.code).to.eql(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/Probe/isAlive",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"Probe",
						"isAlive"
					]
				}
			},
			"response": []
		}
	]
}